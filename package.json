{
  "name": "amazon-transcribe-news-media-analysis",
  "version": "0.5.0",
  "private": true,
  "scripts": {
    "backend": "npm run backend-build && npm run backend-deploy",
    "backend-build": "cd src/backend/transcriber/ && mvn package && npm run backend-package",
    "backend-package": "cd src/backend/transcriber/ && zip backend.zip Dockerfile target/transcriber-1.0-SNAPSHOT-jar-with-dependencies.jar src/main/resources/log4j2.xml",
    "backend-deploy": "aws s3 cp src/backend/transcriber/backend.zip s3://media-analysis-demo/build/ --acl public-read",
    "build": "npm run webui-build && npm run lambda-build && npm run cfn-build && npm run backend-build",
    "cfn-build": "npm run cfn-dist && cfn-flip -c -n -l src/cfn/template.yaml templates/template.yaml && npm run cfn-lambdas-dist && npm run cfn-copy-lambdas",
    "cfn-copy-lambdas": "npm run cfn-copy-lambdas-aws_sdk && npm run cfn-copy-lambdas-fp && npm run cfn-copy-lambdas-orchestrator && npm run cfn-copy-lambdas-setup",
    "cfn-copy-lambdas-aws_sdk": "cp -R src/backend/functions/layers/aws_sdk ./backend/functions/layers",
    "cfn-copy-lambdas-fp": "cp -R src/backend/functions/layers/fp ./backend/functions/layers",
    "cfn-copy-lambdas-orchestrator": "cp -R src/backend/functions/orchestrator/dist ./backend/functions/orchestrator/",
    "cfn-copy-lambdas-setup": "cp -R src/backend/functions/setup/dist ./backend/functions/setup/",
    "cfn-deploy": "npm run zip && aws s3 cp ./v$npm_package_version.zip s3://$CFN_BUCKET/$npm_package_name/v$npm_package_version/$npm_package_name.zip",
    "cfn-dist": "if [ ! -d './templates' ]; then mkdir templates; fi",
    "cfn-lambdas-dist": "npm run cfn-lambdas-dist-aws_sdk && npm run cfn-lambdas-dist-fp && npm run cfn-lambdas-dist-orchestrator && npm run cfn-lambdas-dist-setup",
    "cfn-lambdas-dist-aws_sdk": "if [ ! -d './backend/functions/layers/aws_sdk' ]; then mkdir -p backend/functions/layers/aws_sdk; fi",
    "cfn-lambdas-dist-fp": "if [ ! -d './backend/functions/layers/fp' ]; then mkdir -p backend/functions/layers/fp; fi",
    "cfn-lambdas-dist-orchestrator": "if [ ! -d './backend/functions/orchestrator/' ]; then mkdir -p backend/functions/orchestrator/; fi",
    "cfn-lambdas-dist-setup": "if [ ! -d './backend/functions/setup/' ]; then mkdir -p backend/functions/setup/; fi",
    "cfn-test": "cfn-lint templates/template.yaml",
    "cfn-test-local": "npm run lambda-build && npm run cfn-build && aws cloudformation package --template-file templates/template.yaml --output-template-file templates/packaged.yaml --s3-bucket $TEST_BUCKET && aws cloudformation deploy --template-file templates/packaged.yaml --stack-name MediaAnalysis --capabilities CAPABILITY_IAM",
    "deploy": "npm run webui-deploy && npm run backend-deploy && npm run cfn-deploy",
    "echo-version": "echo v$npm_package_version",
    "lambda-build": "npm run lambda-build-layers && npm run lambda-build-orchestrator && npm run lambda-build-setup",
    "lambda-build-layers": "cd src/backend/functions/layers && npm run build",
    "lambda-build-orchestrator": "cd src/backend/functions/orchestrator && npm run build",
    "lambda-build-setup": "cd src/backend/functions/setup && npm run build",
    "lambda-clean": "rm -rf src/backend/functions/layers/aws_sdk/nodejs && rm -rf src/backend/functions/layers/fp/nodejs",
    "orch-test": "cd src/backend/functions/orchestrator && npm t",
    "postinstall": "cd src/frontend && npm i && cd ../backend/functions/setup && npm i && cd ../orchestrator && npm i",
    "pre-deploy-test": "taskcat -c ci/taskcat.yml --verbose --exclude src --exclude docs --exclude taskcat_outputs",
    "start": "cd src/frontend && npm start",
    "tag": "git tag v$npm_package_version",
    "test": "npm run cfn-test && npm run webui-test && npm run orch-test",
    "webui-build": "cd src/frontend && npm run build",
    "webui-deploy": "cd src/frontend/build && aws s3 cp . s3://media-analysis-demo/static --recursive --acl public-read --exclude settings.js --exclude .DS_Store",
    "webui-deploy-clean": "aws s3 rm s3://media-analysis-demo/static --recursive",
    "webui-test": "cd src/frontend && npm t",
    "zip": "zip -r v$npm_package_version.zip -@ < ci/include.lst"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aws-samples/amazon-transcribe-news-media-analysis.git"
  },
  "bugs": {
    "url": "https://github.com/aws-samples/amazon-transcribe-news-media-analysis/issues"
  },
  "homepage": "https://github.com/aws-samples/amazon-transcribe-news-media-analysis#readme"
}
